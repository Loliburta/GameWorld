{"version":3,"sources":["svg/Logo.svg","utils/searchGames/SearchGames.ts","svg/default.svg","components/navbar/listItem/ListItem.tsx","components/navbar/Navbar.tsx","hooks/useClickOutside.ts","utils/getGameDetails/getGameDetails.ts","components/game/Game.tsx","utils/getRelevantGames/getRelevantGames.ts","components/App.tsx","index.tsx"],"names":["apiKey","process","SearchGames","searchQuery","a","console","log","toLowerCase","fetch","res","json","result","ListItem","game","className","src","background_image","onError","e","target","onerror","defaultImg","alt","name","released","toString","slice","Navbar","ref","setOpen","useState","query","setQuery","useDebounce","setSearchResults","games","setGames","navRef","useRef","resultsVisible","setResultsVisible","useEffect","handleClickOutside","event","current","contains","window","addEventListener","removeEventListener","results","fetchSearchGames","undefined","Logo","onClick","id","type","placeholder","value","onChange","htmlFor","icon","searchIcon","map","key","getGameDetails","gameId","Game","link","width","gameDetails","setGameDetails","fetchGameDetails","replace","star","rating","toFixed","platforms","platformElement","platform","description_raw","getRelevantGames","filter","idx","findIndex","someGame","App","gameList","setGameList","fetchRelevantGames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3791d612.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.0d1db6e9.svg\";","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const SearchGames = async (searchQuery: string) => {\n  console.log(searchQuery);\n  console.log(\n    `https://api.rawg.io/api/games?${apiKey}&search=${searchQuery.toLowerCase()}&page_size=20`\n  );\n  const res = await fetch(\n    `https://api.rawg.io/api/games?${apiKey}&search=${searchQuery.toLowerCase()}&page_size=20`\n  );\n  const result: Types = await res.json();\n  return result;\n};\n","export default __webpack_public_path__ + \"static/media/default.e9813b29.svg\";","import React from \"react\";\nimport { Result } from \"../../../utils/searchGames/interface\";\nimport defaultImg from \"../../../svg/default.svg\";\n\nexport const ListItem: React.FC<Result> = (game) => {\n  return (\n    <li className=\"listItem\">\n      <img\n        src={game.background_image}\n        onError={(e: any) => (\n          (e.target.onerror = null), (e.target.src = defaultImg)\n        )}\n        alt=\"poster\"\n        className=\"listItem__img\"\n      />\n      <div className=\"listItem__name\">{game.name}</div>\n      <div className=\"listItem__release\">\n        {(game.released && game.released.toString().slice(0, 4)) || \"--------\"}\n      </div>\n    </li>\n  );\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport Logo from \"../../svg/Logo.svg\";\nimport { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/bx/bx-search\";\nimport { useDebounce } from \"use-debounce\";\nimport { SearchGames } from \"../../utils/searchGames/SearchGames\";\nimport { Types as searchType } from \"../../utils/searchGames/interface\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport { ListItem } from \"./listItem/ListItem\";\n\nexport const Navbar = () => {\n  const [query, setQuery] = useState(\"\");\n  const [searchQuery] = useDebounce(query, 700);\n  const [searchResults, setSearchResults] = useState<searchType | undefined>();\n  const [games, setGames] = useState<searchType[\"results\"] | undefined>();\n  const navRef = useRef(null);\n  const [resultsVisible, setResultsVisible] = useState(true);\n  useClickOutside(navRef, setResultsVisible);\n\n  useEffect(() => {\n    if (searchQuery === \"\") {\n      return;\n    }\n    const fetchSearchGames = async () => {\n      const result = await SearchGames(searchQuery);\n      setGames(result.results);\n      setSearchResults(result);\n      console.log(result);\n    };\n    fetchSearchGames();\n  }, [searchQuery]);\n  useEffect(() => {\n    if (query === \"\") {\n      setGames(undefined);\n    }\n  }, [query]);\n\n  return (\n    <div className=\"navbar\">\n      <img src={Logo} alt=\"Logo\" className=\"navbar__logo\" />\n      <div\n        className=\"navbar__searchBox\"\n        ref={navRef}\n        onClick={() => setResultsVisible(true)}\n      >\n        <input\n          id=\"search\"\n          type=\"text\"\n          placeholder=\"Type a game title...\"\n          className=\"navbar__searchBox__input\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        ></input>\n        <label htmlFor=\"search\" className=\"navbar__searchBox__icon\">\n          <Icon icon={searchIcon} className=\"navbar__searchBox__icon__svg\" />\n        </label>\n        {resultsVisible && games && (\n          <div\n            className={\n              resultsVisible\n                ? \"navbar__searchBox__results\"\n                : \"navbar__searchBox__results--hidden\"\n            }\n          >\n            <ul className=\"navbar__searchBox__results__list\">\n              {games?.map((game) => {\n                return <ListItem {...game} key={game.id} />;\n              })}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nexport const useClickOutside = (\n  ref: React.MutableRefObject<any>,\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    window.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n      window.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, setOpen]);\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getGameDetails = async (gameId: number) => {\n  const res = await fetch(`https://api.rawg.io/api/games/${gameId}?${apiKey}`);\n  const result: Types = await res.json();\n  return result;\n};\n","import { useState, useEffect } from \"react\";\nimport { getGameDetails } from \"../../utils/getGameDetails/getGameDetails\";\nimport { Result as gameType } from \"../../utils/getRelevantGames/interface\";\nimport { Types as DetailsType } from \"../../utils/getGameDetails/interface\";\nimport { Icon } from \"@iconify/react\";\nimport star from \"@iconify-icons/carbon/star-filled\";\nexport const Game: React.FC<gameType> = (game) => {\n  const [gameDetails, setGameDetails] = useState<DetailsType>();\n  const resize = (link: string, width: number) => {\n    return link.replace(\"media/\", `media/resize/${width}/-/`);\n  };\n  useEffect(() => {\n    const fetchGameDetails = async () => {\n      setGameDetails(await getGameDetails(game.id));\n    };\n    fetchGameDetails();\n    //TODO add game description\n  }, [game.id]);\n  return (\n    <div className=\"game\">\n      <div className=\"game__top\">\n        <img\n          src={resize(game.background_image, 420)}\n          alt=\"background\"\n          className=\"game__top__img\"\n        />\n        <div className=\"game__top__rating\">\n          <Icon icon={star} className=\"game__top__rating__star\" />\n          <div className=\"game__top__rating__text\">\n            {game.rating.toFixed(2)}/5\n          </div>\n        </div>\n        <div className=\"game__top__name\">\n          <div className=\"game__top__name__text\">{game.name}</div>\n        </div>\n        <div className=\"game__top__platforms\">\n          {game.platforms.map((platformElement) => (\n            <div\n              className=\"game__top__platforms__platform\"\n              key={platformElement.platform.name}\n            >\n              {platformElement.platform.name}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* <div>{game.id}</div> */}\n      <div className=\"game__bot\">\n        <div className=\"game__bot__text\">{gameDetails?.description_raw}</div>\n      </div>\n    </div>\n  );\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getRelevantGames = async () => {\n  const res = await fetch(`https://api.rawg.io/api/games/lists/main?${apiKey}`);\n  const result: Types = await res.json();\n  // Remove Duplicates\n  const games = result.results.filter(\n    (game, idx, games) =>\n      games.findIndex((someGame) => someGame.id === game.id) === idx\n  );\n  return games;\n};\n","import { useState, useEffect } from \"react\";\nimport { Navbar } from \"./navbar/Navbar\";\nimport { Game } from \"./game/Game\";\nimport { getRelevantGames } from \"../utils/getRelevantGames/getRelevantGames\";\nimport { Result as gameType } from \"../utils/getRelevantGames/interface\";\n// const apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const App = () => {\n  const [gameList, setGameList] = useState<gameType[]>();\n  useEffect(() => {\n    const fetchRelevantGames = async () => {\n      setGameList(await getRelevantGames());\n    };\n    fetchRelevantGames();\n  }, []);\n  return (\n    <div>\n      <Navbar />\n      <div className=\"app__gameList\">\n        {gameList?.map((game: gameType) => (\n          <Game {...game} key={game.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}