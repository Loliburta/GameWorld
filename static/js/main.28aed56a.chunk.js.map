{"version":3,"sources":["svg/Logo.svg","utils/searchGames/SearchGames.ts","components/navbar/Navbar.tsx","hooks/useClickOutside.ts","utils/getGameDetails/getGameDetails.ts","components/game/Game.tsx","utils/getRelevantGames/getRelevantGames.ts","components/App.tsx","index.tsx"],"names":["apiKey","process","SearchGames","searchQuery","a","console","log","toLowerCase","fetch","res","json","result","Navbar","ref","setOpen","useState","query","setQuery","useDebounce","setSearchResults","games","setGames","navRef","useRef","resultsVisible","setResultsVisible","useEffect","handleClickOutside","event","current","contains","target","window","addEventListener","removeEventListener","results","fetchSearchGames","undefined","className","src","Logo","alt","onClick","id","type","placeholder","value","onChange","e","htmlFor","icon","searchIcon","map","game","name","getGameDetails","gameId","Game","link","width","gameDetails","setGameDetails","fetchGameDetails","background_image","replace","star","rating","toFixed","platforms","platformElement","platform","description_raw","getRelevantGames","filter","idx","findIndex","someGame","App","gameList","setGameList","fetchRelevantGames","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,MAA0B,iC,sBCCnCA,EAAM,cAAUC,oCAETC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACzBC,QAAQC,IAAIH,GACZE,QAAQC,IAAR,wCACmCN,EADnC,mBACoDG,EAAYI,cADhE,kBAFyB,SAKPC,MAAM,iCAAD,OACYR,EADZ,mBAC6BG,EAAYI,cADzC,kBALE,cAKnBE,EALmB,gBAQGA,EAAIC,OARP,cAQnBC,EARmB,yBASlBA,GATkB,2CAAH,sD,OCMXC,EAAS,WACpB,ICRAC,EACAC,EDOA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBC,YAAYF,EAAO,KAAlCb,EAAP,oBACA,EAA0CY,qBAA1C,mBAAsBI,GAAtB,WACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAASC,iBAAO,MACtB,EAA4CR,oBAAS,GAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KAqBA,OClCAZ,EDcgBS,ECbhBR,EDawBW,ECXxBC,qBAAU,WACR,IAAMC,EAAqB,SAACC,GACtBf,EAAIgB,UAAYhB,EAAIgB,QAAQC,SAASF,EAAMG,SAC7CjB,GAAQ,IAKZ,OAFAkB,OAAOC,iBAAiB,YAAaN,GACrCK,OAAOC,iBAAiB,aAAcN,GAC/B,WACLK,OAAOE,oBAAoB,YAAaP,GACxCK,OAAOE,oBAAoB,aAAcP,MAE1C,CAACd,EAAKC,IDCTY,qBAAU,WACY,KAAhBvB,GAGkB,uCAAG,4BAAAC,EAAA,sEACFF,EAAYC,GADV,OACjBQ,EADiB,OAEvBU,EAASV,EAAOwB,SAChBhB,EAAiBR,GACjBN,QAAQC,IAAIK,GAJW,2CAAH,oDAMtByB,KACC,CAACjC,IACJuB,qBAAU,WACM,KAAVV,GACFK,OAASgB,KAEV,CAACrB,IAGF,sBAAKsB,UAAU,SAAf,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,iBACrC,sBACEA,UAAU,oBACVzB,IAAKS,EACLoB,QAAS,kBAAMjB,GAAkB,IAHnC,UAKE,uBACEkB,GAAG,SACHC,KAAK,OACLC,YAAY,uBACZP,UAAU,2BACVQ,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAO/B,EAAS+B,EAAEjB,OAAOe,UAErC,uBAAOG,QAAQ,SAASX,UAAU,0BAAlC,SACE,cAAC,OAAD,CAAMY,KAAMC,IAAYb,UAAU,mCAEnCd,GAAkBJ,GACjB,qBACEkB,UACEd,EACI,6BACA,qCAJR,SAOE,oBAAIc,UAAU,mCAAd,gBACGlB,QADH,IACGA,OADH,EACGA,EAAOgC,KAAI,SAACC,GACX,OACE,oBACEf,UAAU,yCADZ,SAIGe,EAAKC,MAFDD,EAAKC,oBEnExBtD,EAAM,cAAUC,oCAETsD,EAAc,uCAAG,WAAOC,GAAP,iBAAApD,EAAA,sEACVI,MAAM,iCAAD,OAAkCgD,EAAlC,YAA4CxD,IADvC,cACtBS,EADsB,gBAEAA,EAAIC,OAFJ,cAEtBC,EAFsB,yBAGrBA,GAHqB,2CAAH,sD,QCGd8C,EAA2B,SAACJ,GACvC,IACgBK,EAAcC,EAD9B,EAAsC5C,qBAAtC,mBAAO6C,EAAP,KAAoBC,EAApB,KAWA,OAPAnC,qBAAU,YACc,uCAAG,sBAAAtB,EAAA,kEACvByD,EADuB,SACFN,EAAeF,EAAKV,IADlB,6EAAH,qDAGtBmB,KAEC,CAACT,EAAKV,KAEP,sBAAKL,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBACEC,KAdQmB,EAcIL,EAAKU,iBAdKJ,EAca,IAblCD,EAAKM,QAAQ,SAAb,uBAAuCL,EAAvC,SAcDlB,IAAI,aACJH,UAAU,mBAEZ,sBAAKA,UAAU,oBAAf,UACE,cAAC,OAAD,CAAMY,KAAMe,IAAM3B,UAAU,4BAC5B,sBAAKA,UAAU,0BAAf,UACGe,EAAKa,OAAOC,QAAQ,GADvB,WAIF,qBAAK7B,UAAU,kBAAf,SACE,qBAAKA,UAAU,wBAAf,SAAwCe,EAAKC,SAE/C,qBAAKhB,UAAU,uBAAf,SACGe,EAAKe,UAAUhB,KAAI,SAACiB,GAAD,OAClB,qBACE/B,UAAU,iCADZ,SAIG+B,EAAgBC,SAAShB,MAFrBe,EAAgBC,SAAShB,cAStC,qBAAKhB,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,gBAAkCsB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAaW,wBChDjDvE,EAAM,cAAUC,oCAETuE,EAAgB,uCAAG,gCAAApE,EAAA,sEACZI,MAAM,4CAAD,OAA6CR,IADtC,cACxBS,EADwB,gBAEFA,EAAIC,OAFF,cAExBC,EAFwB,OAIxBS,EAAQT,EAAOwB,QAAQsC,QAC3B,SAACpB,EAAMqB,EAAKtD,GAAZ,OACEA,EAAMuD,WAAU,SAACC,GAAD,OAAcA,EAASjC,KAAOU,EAAKV,QAAQ+B,KANjC,kBAQvBtD,GARuB,2CAAH,qDCIhByD,EAAM,WACjB,MAAgC9D,qBAAhC,mBAAO+D,EAAP,KAAiBC,EAAjB,KAOA,OANArD,qBAAU,YACgB,uCAAG,sBAAAtB,EAAA,kEACzB2E,EADyB,SACPP,IADO,6EAAH,qDAGxBQ,KACC,IAED,gCACE,cAAC,EAAD,IACA,qBAAK1C,UAAU,gBAAf,gBACGwC,QADH,IACGA,OADH,EACGA,EAAU1B,KAAI,SAACC,GAAD,OACb,wBAAC,EAAD,2BAAUA,GAAV,IAAgB4B,IAAK5B,EAAKV,eCfpCuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.28aed56a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.0d1db6e9.svg\";","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const SearchGames = async (searchQuery: string) => {\n  console.log(searchQuery);\n  console.log(\n    `https://api.rawg.io/api/games?${apiKey}&search=${searchQuery.toLowerCase()}&page_size=20`\n  );\n  const res = await fetch(\n    `https://api.rawg.io/api/games?${apiKey}&search=${searchQuery.toLowerCase()}&page_size=20`\n  );\n  const result: Types = await res.json();\n  return result;\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport Logo from \"../../svg/Logo.svg\";\nimport { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/bx/bx-search\";\nimport { useDebounce } from \"use-debounce\";\nimport { SearchGames } from \"../../utils/searchGames/SearchGames\";\nimport { Types as searchType } from \"../../utils/searchGames/interface\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\n\nexport const Navbar = () => {\n  const [query, setQuery] = useState(\"\");\n  const [searchQuery] = useDebounce(query, 1000);\n  const [searchResults, setSearchResults] = useState<searchType | undefined>();\n  const [games, setGames] = useState<searchType[\"results\"] | undefined>();\n  const navRef = useRef(null);\n  const [resultsVisible, setResultsVisible] = useState(true);\n  useClickOutside(navRef, setResultsVisible);\n\n  useEffect(() => {\n    if (searchQuery === \"\") {\n      return;\n    }\n    const fetchSearchGames = async () => {\n      const result = await SearchGames(searchQuery);\n      setGames(result.results);\n      setSearchResults(result);\n      console.log(result);\n    };\n    fetchSearchGames();\n  }, [searchQuery]);\n  useEffect(() => {\n    if (query === \"\") {\n      setGames(undefined);\n    }\n  }, [query]);\n\n  return (\n    <div className=\"navbar\">\n      <img src={Logo} alt=\"Logo\" className=\"navbar__logo\" />\n      <div\n        className=\"navbar__searchBox\"\n        ref={navRef}\n        onClick={() => setResultsVisible(true)}\n      >\n        <input\n          id=\"search\"\n          type=\"text\"\n          placeholder=\"Type a game title...\"\n          className=\"navbar__searchBox__input\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        ></input>\n        <label htmlFor=\"search\" className=\"navbar__searchBox__icon\">\n          <Icon icon={searchIcon} className=\"navbar__searchBox__icon__svg\" />\n        </label>\n        {resultsVisible && games && (\n          <div\n            className={\n              resultsVisible\n                ? \"navbar__searchBox__results\"\n                : \"navbar__searchBox__results--hidden\"\n            }\n          >\n            <ul className=\"navbar__searchBox__results__list\">\n              {games?.map((game) => {\n                return (\n                  <li\n                    className=\"navbar__searchBox__results__list__item\"\n                    key={game.name}\n                  >\n                    {game.name}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nexport const useClickOutside = (\n  ref: React.MutableRefObject<any>,\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    window.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n      window.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, setOpen]);\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getGameDetails = async (gameId: number) => {\n  const res = await fetch(`https://api.rawg.io/api/games/${gameId}?${apiKey}`);\n  const result: Types = await res.json();\n  return result;\n};\n","import { useState, useEffect } from \"react\";\nimport { getGameDetails } from \"../../utils/getGameDetails/getGameDetails\";\nimport { Result as gameType } from \"../../utils/getRelevantGames/interface\";\nimport { Types as DetailsType } from \"../../utils/getGameDetails/interface\";\nimport { Icon } from \"@iconify/react\";\nimport star from \"@iconify-icons/carbon/star-filled\";\nexport const Game: React.FC<gameType> = (game) => {\n  const [gameDetails, setGameDetails] = useState<DetailsType>();\n  const resize = (link: string, width: number) => {\n    return link.replace(\"media/\", `media/resize/${width}/-/`);\n  };\n  useEffect(() => {\n    const fetchGameDetails = async () => {\n      setGameDetails(await getGameDetails(game.id));\n    };\n    fetchGameDetails();\n    //TODO add game description\n  }, [game.id]);\n  return (\n    <div className=\"game\">\n      <div className=\"game__top\">\n        <img\n          src={resize(game.background_image, 420)}\n          alt=\"background\"\n          className=\"game__top__img\"\n        />\n        <div className=\"game__top__rating\">\n          <Icon icon={star} className=\"game__top__rating__star\" />\n          <div className=\"game__top__rating__text\">\n            {game.rating.toFixed(2)}/5\n          </div>\n        </div>\n        <div className=\"game__top__name\">\n          <div className=\"game__top__name__text\">{game.name}</div>\n        </div>\n        <div className=\"game__top__platforms\">\n          {game.platforms.map((platformElement) => (\n            <div\n              className=\"game__top__platforms__platform\"\n              key={platformElement.platform.name}\n            >\n              {platformElement.platform.name}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* <div>{game.id}</div> */}\n      <div className=\"game__bot\">\n        <div className=\"game__bot__text\">{gameDetails?.description_raw}</div>\n      </div>\n    </div>\n  );\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getRelevantGames = async () => {\n  const res = await fetch(`https://api.rawg.io/api/games/lists/main?${apiKey}`);\n  const result: Types = await res.json();\n  // Remove Duplicates\n  const games = result.results.filter(\n    (game, idx, games) =>\n      games.findIndex((someGame) => someGame.id === game.id) === idx\n  );\n  return games;\n};\n","import { useState, useEffect } from \"react\";\nimport { Navbar } from \"./navbar/Navbar\";\nimport { Game } from \"./game/Game\";\nimport { getRelevantGames } from \"../utils/getRelevantGames/getRelevantGames\";\nimport { Result as gameType } from \"../utils/getRelevantGames/interface\";\n// const apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const App = () => {\n  const [gameList, setGameList] = useState<gameType[]>();\n  useEffect(() => {\n    const fetchRelevantGames = async () => {\n      setGameList(await getRelevantGames());\n    };\n    fetchRelevantGames();\n  }, []);\n  return (\n    <div>\n      <Navbar />\n      <div className=\"app__gameList\">\n        {gameList?.map((game: gameType) => (\n          <Game {...game} key={game.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}