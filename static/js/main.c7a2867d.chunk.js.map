{"version":3,"sources":["svg/Logo.svg","components/navbar/Navbar.tsx","utils/getGameDetails/getGameDetails.ts","components/game/Game.tsx","utils/getRelevantGames/getRelevantGames.ts","components/App.tsx","index.tsx"],"names":["Navbar","className","src","Logo","alt","type","placeholder","apiKey","process","getGameDetails","gameId","a","fetch","res","json","result","Game","game","link","width","useState","gameDetails","setGameDetails","useEffect","id","fetchGameDetails","background_image","replace","rating","toFixed","name","platforms","map","platformElement","platform","description_raw","getRelevantGames","games","results","filter","idx","findIndex","someGame","App","gameList","setGameList","fetchRelevantGames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,MAA0B,iC,OCE5BA,EAAS,WACpB,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,iBACrC,uBACEI,KAAK,OACLC,YAAY,uBACZL,UAAU,uBCRZM,EAAM,cAAUC,oCAETC,EAAc,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACVC,MAAM,iCAAD,OAAkCF,EAAlC,YAA4CH,IADvC,cACtBM,EADsB,gBAEAA,EAAIC,OAFJ,cAEtBC,EAFsB,yBAGrBA,GAHqB,2CAAH,sDCCdC,EAA2B,SAACC,GACvC,IACgBC,EAAcC,EAD9B,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAWA,OAPAC,qBAAU,YACc,uCAAG,sBAAAZ,EAAA,kEACvBW,EADuB,SACFb,EAAeQ,EAAKO,IADlB,6EAAH,qDAGtBC,KAEC,CAACR,EAAKO,KAEP,sBAAKvB,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBACEC,KAdQgB,EAcID,EAAKS,iBAdKP,EAca,IAblCD,EAAKS,QAAQ,SAAb,uBAAuCR,EAAvC,SAcDf,IAAI,aACJH,UAAU,mBAEZ,sBAAKA,UAAU,oBAAf,UAAoCgB,EAAKW,OAAOC,QAAQ,GAAxD,SACA,qBAAK5B,UAAU,kBAAf,SAAkCgB,EAAKa,OACvC,qBAAK7B,UAAU,uBAAf,SACGgB,EAAKc,UAAUC,KACd,SAACC,GAAD,OAAqBA,EAAgBC,SAASJ,KAAO,YAM3D,qBAAK7B,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,gBAAkCoB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAac,wBClCjD5B,EAAM,cAAUC,oCAET4B,EAAgB,uCAAG,gCAAAzB,EAAA,sEACZC,MAAM,4CAAD,OAA6CL,IADtC,cACxBM,EADwB,gBAEFA,EAAIC,OAFF,cAExBC,EAFwB,OAIxBsB,EAAQtB,EAAOuB,QAAQC,QAC3B,SAACtB,EAAMuB,EAAKH,GAAZ,OACEA,EAAMI,WAAU,SAACC,GAAD,OAAcA,EAASlB,KAAOP,EAAKO,QAAQgB,KANjC,kBAQvBH,GARuB,2CAAH,qDCIhBM,EAAM,WACjB,MAAgCvB,qBAAhC,mBAAOwB,EAAP,KAAiBC,EAAjB,KAOA,OANAtB,qBAAU,YACgB,uCAAG,sBAAAZ,EAAA,kEACzBkC,EADyB,SACPT,IADO,6EAAH,qDAGxBU,KACC,IAED,gCACE,cAAC,EAAD,IACA,qBAAK7C,UAAU,gBAAf,gBACG2C,QADH,IACGA,OADH,EACGA,EAAUZ,KAAI,SAACf,GAAD,OACb,cAAC,EAAD,eAAUA,aCfpB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c7a2867d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.0d1db6e9.svg\";","import Logo from \"../../svg/Logo.svg\";\n\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <img src={Logo} alt=\"Logo\" className=\"navbar__logo\" />\n      <input\n        type=\"text\"\n        placeholder=\"Type a game title...\"\n        className=\"navbar__search\"\n      ></input>\n    </div>\n  );\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getGameDetails = async (gameId: number) => {\n  const res = await fetch(`https://api.rawg.io/api/games/${gameId}?${apiKey}`);\n  const result: Types = await res.json();\n  return result;\n};\n","import { useState, useEffect } from \"react\";\nimport { getGameDetails } from \"../../utils/getGameDetails/getGameDetails\";\nimport { Result as gameType } from \"../../utils/getRelevantGames/interface\";\nimport { Types as DetailsType } from \"../../utils/getGameDetails/interface\";\nexport const Game: React.FC<gameType> = (game) => {\n  const [gameDetails, setGameDetails] = useState<DetailsType>();\n  const resize = (link: string, width: number) => {\n    return link.replace(\"media/\", `media/resize/${width}/-/`);\n  };\n  useEffect(() => {\n    const fetchGameDetails = async () => {\n      setGameDetails(await getGameDetails(game.id));\n    };\n    fetchGameDetails();\n    //TODO add game description\n  }, [game.id]);\n  return (\n    <div className=\"game\">\n      <div className=\"game__top\">\n        <img\n          src={resize(game.background_image, 420)}\n          alt=\"background\"\n          className=\"game__top__img\"\n        />\n        <div className=\"game__top__rating\">{game.rating.toFixed(2)}/ 5</div>\n        <div className=\"game__top__name\">{game.name}</div>\n        <div className=\"game__top__platforms\">\n          {game.platforms.map(\n            (platformElement) => platformElement.platform.name + \" \"\n          )}\n        </div>\n      </div>\n\n      {/* <div>{game.id}</div> */}\n      <div className=\"game__bot\">\n        <div className=\"game__bot__text\">{gameDetails?.description_raw}</div>\n      </div>\n    </div>\n  );\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getRelevantGames = async () => {\n  const res = await fetch(`https://api.rawg.io/api/games/lists/main?${apiKey}`);\n  const result: Types = await res.json();\n  // Remove Duplicates\n  const games = result.results.filter(\n    (game, idx, games) =>\n      games.findIndex((someGame) => someGame.id === game.id) === idx\n  );\n  return games;\n};\n","import { useState, useEffect } from \"react\";\nimport { Navbar } from \"./navbar/Navbar\";\nimport { Game } from \"./game/Game\";\nimport { getRelevantGames } from \"../utils/getRelevantGames/getRelevantGames\";\nimport { Result as gameType } from \"../utils/getRelevantGames/interface\";\n// const apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const App = () => {\n  const [gameList, setGameList] = useState<gameType[]>();\n  useEffect(() => {\n    const fetchRelevantGames = async () => {\n      setGameList(await getRelevantGames());\n    };\n    fetchRelevantGames();\n  }, []);\n  return (\n    <div>\n      <Navbar />\n      <div className=\"app__gameList\">\n        {gameList?.map((game: gameType) => (\n          <Game {...game} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}