{"version":3,"sources":["utils/getGameReviews/getGameReviews.ts","components/fullGameInfo/row/Row.tsx","components/fullGameInfo/platformToIcon/PlatformToIcon.tsx","components/fullGameInfo/gameReviews/GameReviews.tsx","components/fullGameInfo/FullGameInfo.tsx"],"names":["apiKey","process","getGameReviews","gameID","a","fetch","res","json","result","Row","name","value","text","className","PlatformToIcon","iconObject","PC","icon","windowsIcon","playstation2Icon","width","playstation3Icon","playstation4Icon","playstation5Icon","playstationvitaIcon","nintendoswitchIcon","GameCube","nintendogamecubeIcon","nintendo3dsIcon","NES","nesIcon","SNES","snesIcon","Wii","wiiIcon","wiiuIcon","gameboyIcon","iOS","appleIcon","split","xboxIcon","slice","join","GameReview","review","dangerouslySetInnerHTML","__html","dompurify","sanitize","repeat","rating","user","username","date","day","Date","getDay","toLocaleString","minimumIntegerDigits","month","getMonth","year","getFullYear","readableDate","created","FullGameInfo","useState","gameDetails","setGameDetails","gameReviews","setGameReviews","useParams","useEffect","getGameDetails","parseInt","fetchGameDetails","src","resize","background_image_additional","onError","e","target","onerror","defaultImg","alt","background_image","metacritic","released","developers","map","developer","genres","genre","tags","filter","tag","includes","platforms","platform","description_raw","results","key","id"],"mappings":"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","file":"static/js/4.f1e156e8.chunk.js","sourcesContent":["import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getGameReviews = async (gameID: number) => {\n  const res = await fetch(\n    `https://api.rawg.io/api/games/${gameID}/reviews?${apiKey}`\n  );\n  const result: Types = await res.json();\n  return result;\n};\n","interface Props {\n  name: string;\n  value: any;\n  text?: string;\n}\nexport const Row: React.FC<Props> = ({ name, value, text }) => {\n  return (\n    <>\n      {(value && (\n        <div className=\"fullGame__out__in__left__rowDiv\">\n          <div className=\"fullGame__out__in__left__rowDiv__name\">{name}</div>\n          <div className=\"fullGame__out__in__left__rowDiv__value\">\n            {value}\n            {text}\n          </div>\n        </div>\n      )) || <></>}\n    </>\n  );\n};\n","import { Icon } from \"@iconify/react\";\nimport windowsIcon from \"@iconify-icons/ant-design/windows-filled\";\nimport playstation2Icon from \"@iconify-icons/simple-icons/playstation2\";\nimport playstation3Icon from \"@iconify-icons/simple-icons/playstation3\";\nimport playstation4Icon from \"@iconify-icons/simple-icons/playstation4\";\nimport playstation5Icon from \"@iconify-icons/simple-icons/playstation5\";\nimport playstationvitaIcon from \"@iconify-icons/simple-icons/playstationvita\";\nimport xboxIcon from \"@iconify-icons/cib/xbox\";\nimport nintendoswitchIcon from \"@iconify-icons/cib/nintendo-switch\";\nimport nintendogamecubeIcon from \"@iconify-icons/simple-icons/nintendogamecube\";\nimport nintendo3dsIcon from \"@iconify-icons/cib/nintendo-3ds\";\nimport nesIcon from \"@iconify-icons/teenyicons/nes-outline\";\nimport snesIcon from \"@iconify-icons/whh/controllersnes\";\nimport wiiIcon from \"@iconify-icons/cib/wii\";\nimport wiiuIcon from \"@iconify-icons/cib/wiiu\";\nimport gameboyIcon from \"@iconify-icons/whh/gameboy\";\nimport appleIcon from \"@iconify-icons/ant-design/apple-filled\";\n\ntype IconObjectType = {\n  [key: string]: JSX.Element;\n};\ninterface Props {\n  name: string;\n}\nexport const PlatformToIcon: React.FC<Props> = ({ name }) => {\n  const iconObject: IconObjectType = {\n    PC: <Icon icon={windowsIcon} />,\n    \"PlayStation 2\": <Icon icon={playstation2Icon} width=\"32px\" />,\n    \"PlayStation 3\": <Icon icon={playstation3Icon} width=\"32px\" />,\n    \"PlayStation 4\": <Icon icon={playstation4Icon} width=\"32px\" />,\n    \"PlayStation 5\": <Icon icon={playstation5Icon} width=\"32px\" />,\n    \"PS Vita\": <Icon icon={playstationvitaIcon} />,\n    \"Nintendo Switch\": <Icon icon={nintendoswitchIcon} />,\n    GameCube: <Icon icon={nintendogamecubeIcon} />,\n    \"Nintendo 3DS\": <Icon icon={nintendo3dsIcon} />,\n    NES: <Icon icon={nesIcon} />,\n    SNES: <Icon icon={snesIcon} />,\n    Wii: <Icon icon={wiiIcon} />,\n    \"Wii U\": <Icon icon={wiiuIcon} />,\n    \"Game Boy Color\": <Icon icon={gameboyIcon} />,\n    iOS: <Icon icon={appleIcon} />,\n  };\n  if (iconObject[name]) {\n    return <div className=\"platform__icon\">{iconObject[name]}</div>;\n  }\n  if (name.split(\" \")[0] === \"Xbox\") {\n    return (\n      <div className=\"xbox\">\n        <Icon icon={xboxIcon} />\n        <div className=\"xbox__name\">{name.split(\" \").slice(1).join(\" \")}</div>\n      </div>\n    );\n  }\n  return <>{name}</>;\n};\n","import { Result as ReviewType } from \"../../../utils/getGameReviews/interface\";\nimport dompurify from \"dompurify\";\n\nconst GameReview: React.FC<ReviewType> = (review) => {\n  const readableDate = (date: Date) => {\n    date = new Date(date);\n    const day = date.getDay().toLocaleString(\"en-US\", {\n      minimumIntegerDigits: 2,\n    });\n    const month = (date.getMonth() + 1).toLocaleString(\"en-US\", {\n      minimumIntegerDigits: 2,\n    });\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n  return (\n    <div className=\"review\">\n      <p\n        dangerouslySetInnerHTML={{\n          __html: dompurify.sanitize(review.text),\n        }}\n      ></p>\n      <br />\n      <div className=\"review__stars\">\n        {\"★\".repeat(review.rating) + \"☆\".repeat(5 - review.rating)}\n      </div>\n      <div className=\"review__created\">\n        {review.user ? `${review.user.username}` : \"\"}{\" \"}\n        {readableDate(review.created)}\n      </div>\n    </div>\n  );\n};\nexport default GameReview;\n","import { useState, useEffect } from \"react\";\nimport { getGameDetails } from \"../../utils/getGameDetails/getGameDetails\";\nimport { Types as DetailsType } from \"../../utils/getGameDetails/interface\";\nimport { getGameReviews } from \"../../utils/getGameReviews/getGameReviews\";\nimport { Types as ReviewsType } from \"../../utils/getGameReviews/interface\";\nimport { useParams } from \"react-router-dom\";\nimport { resize } from \"../../utils/resize\";\nimport { Row } from \"./row/Row\";\nimport defaultImg from \"../../svg/default.svg\";\nimport { PlatformToIcon } from \"./platformToIcon/PlatformToIcon\";\nimport GameReview from \"./gameReviews/GameReviews\";\ninterface ParamTypes {\n  gameID: string;\n}\nconst FullGameInfo = () => {\n  const [gameDetails, setGameDetails] = useState<DetailsType>();\n  const [gameReviews, setGameReviews] = useState<ReviewsType>();\n  const { gameID } = useParams<ParamTypes>();\n  useEffect(() => {\n    const fetchGameDetails = async () => {\n      setGameDetails(await getGameDetails(parseInt(gameID)));\n      setGameReviews(await getGameReviews(parseInt(gameID)));\n    };\n    fetchGameDetails();\n  }, [gameID]);\n  return (\n    <>\n      <div className=\"fullGame\">\n        <div className=\"fullGame__name\">{gameDetails?.name}</div>\n        <div className=\"fullGame__out\">\n          <img\n            src={resize(gameDetails?.background_image_additional, 1280)}\n            onError={(e: any) => {\n              e.target.onerror = null;\n              e.target.src = defaultImg;\n            }}\n            className=\"fullGame__out__img\"\n            alt=\"game\"\n          />\n          <div className=\"fullGame__out__in\">\n            <div className=\"fullGame__out__in__left\">\n              <img\n                src={resize(gameDetails?.background_image, 420)}\n                onError={(e: any) => {\n                  e.target.onerror = null;\n                  e.target.src = defaultImg;\n                }}\n                alt=\"game\"\n                className=\"fullGame__out__in__left__img\"\n              />\n              <Row name=\"RATING\" value={gameDetails?.rating} text=\"/5\" />\n              <Row\n                name=\"METACRITIC\"\n                value={gameDetails?.metacritic}\n                text=\"/100\"\n              />\n              {gameDetails?.rating || gameDetails?.metacritic ? <br /> : \"\"}\n              <Row name=\"RELEASE DATE\" value={gameDetails?.released} />\n              <Row\n                name=\"COMPANY\"\n                value={gameDetails?.developers\n                  .map((developer) => developer.name)\n                  .slice(0, 1)}\n              />\n              <Row\n                name=\"GENRE\"\n                value={gameDetails?.genres.map((genre) => genre.name + \" \")}\n              />\n              {gameDetails?.released ||\n              gameDetails?.developers ||\n              gameDetails?.genres ? (\n                <br />\n              ) : (\n                \"\"\n              )}\n              <div className=\"fullGame__out__in__left__tagsDiv\">\n                <div className=\"fullGame__out__in__left__tagsDiv__name\">\n                  POPULAR TAGS\n                </div>\n                <div className=\"fullGame__out__in__left__tagsDiv__values\">\n                  {gameDetails?.tags\n                    .filter(\n                      (tag) =>\n                        ![\n                          \"steam-trading-cards\",\n                          \"In-App Purchases\",\n                          \"Steam Achievements\",\n                          \"Full controller support\",\n                          \"cooperative\",\n                        ].includes(tag.name)\n                    )\n                    .slice(0, 5)\n                    .map((tag) => (\n                      <div className=\"fullGame__out__in__left__tagsDiv__values__value\">\n                        {tag.name}\n                      </div>\n                    ))}\n                </div>\n              </div>\n              {gameDetails?.tags ? <div className=\"br\"></div> : \"\"}\n              <div className=\"fullGame__out__in__left__platformsDiv\">\n                <div className=\"fullGame__out__in__left__platformsDiv__name\">\n                  PLATFORMS\n                </div>\n                <div className=\"fullGame__out__in__left__platformsDiv__value\">\n                  {gameDetails?.platforms.map((platform) => (\n                    <PlatformToIcon name={platform.platform.name} />\n                  ))}\n                </div>\n              </div>\n            </div>\n            <div className=\"fullGame__out__in__right\">\n              <div className=\"fullGame__out__in__right__about\">\n                ABOUT THIS GAME\n              </div>\n              <div className=\"fullGame__out__in__right__desc\">\n                {gameDetails?.description_raw}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"fullGame__reviews\">\n          <div className=\"fullGame__reviews__title\">Reviews</div>\n          {gameReviews?.results.map((result) => {\n            return <GameReview {...result} key={result.id} />;\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default FullGameInfo;\n"],"sourceRoot":""}