{"version":3,"sources":["svg/Logo.svg","utils/searchGames/SearchGames.ts","svg/default.svg","utils/resize.ts","components/navbar/listItem/ListItem.tsx","components/navbar/Navbar.tsx","hooks/useClickOutside.ts","utils/getGameDetails/getGameDetails.ts","components/game/Game.tsx","utils/getRelevantGames/getRelevantGames.ts","components/fullGameInfo/row/Row.tsx","components/fullGameInfo/FullGameInfo.tsx","components/App.tsx","index.tsx"],"names":["apiKey","process","SearchGames","searchQuery","a","console","log","toLowerCase","fetch","res","json","result","resize","link","width","replace","defaultImg","ListItem","game","to","id","className","src","background_image","onError","e","target","onerror","alt","name","released","toString","slice","Navbar","ref","setOpen","useState","query","setQuery","useDebounce","setSearchResults","games","setGames","navRef","useRef","resultsVisible","setResultsVisible","useEffect","handleClickOutside","event","current","contains","window","addEventListener","removeEventListener","results","fetchSearchGames","undefined","Logo","onClick","type","placeholder","value","onChange","htmlFor","icon","searchIcon","map","key","getGameDetails","gameId","background_image_additional","Game","gameDetails","setGameDetails","fetchGameDetails","star","rating","toFixed","platforms","platformElement","platform","description_raw","getRelevantGames","filter","idx","findIndex","someGame","Row","text","FullGameInfo","gameID","useParams","parseInt","metacritic","developers","developer","genres","genre","tags","tag","includes","App","gameList","setGameList","fetchRelevantGames","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c4cf803.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.0d1db6e9.svg\";","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const SearchGames = async (searchQuery: string) => {\n  console.log(searchQuery);\n  console.log(\n    `https://api.rawg.io/api/games?${apiKey}&search=${searchQuery.toLowerCase()}&page_size=20`\n  );\n  const res = await fetch(\n    `https://api.rawg.io/api/games?${apiKey}&search=${searchQuery.toLowerCase()}&page_size=20`\n  );\n  const result: Types = await res.json();\n  return result;\n};\n","export default __webpack_public_path__ + \"static/media/default.8b644eb3.svg\";","import defaultImg from \"../svg/default.svg\";\nexport const resize = (link: string | undefined, width: number) => {\n  return (\n    (link && link.replace(\"media/\", `media/resize/${width}/-/`)) || defaultImg\n  );\n};\n","import React from \"react\";\nimport { Result } from \"../../../utils/searchGames/interface\";\nimport defaultImg from \"../../../svg/default.svg\";\nimport { resize } from \"../../../utils/resize\";\nimport { Link } from \"react-router-dom\";\n\nexport const ListItem: React.FC<Result> = (game) => {\n  return (\n    <Link to={`/game/${game.id}`}>\n      <li className=\"listItem\">\n        <img\n          src={resize(game.background_image, 200)}\n          onError={(e: any) => {\n            e.target.onerror = null;\n            e.target.src = defaultImg;\n          }}\n          alt=\"poster\"\n          className=\"listItem__img\"\n        />\n        <div className=\"listItem__name\">{game.name}</div>\n        <div className=\"listItem__release\">\n          {(game.released && game.released.toString().slice(0, 4)) ||\n            \"--------\"}\n        </div>\n      </li>\n    </Link>\n  );\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport Logo from \"../../svg/Logo.svg\";\nimport { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/bx/bx-search\";\nimport { useDebounce } from \"use-debounce\";\nimport { SearchGames } from \"../../utils/searchGames/SearchGames\";\nimport { Types as searchType } from \"../../utils/searchGames/interface\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport { ListItem } from \"./listItem/ListItem\";\n\nexport const Navbar = () => {\n  const [query, setQuery] = useState(\"\");\n  const [searchQuery] = useDebounce(query, 700);\n  const [searchResults, setSearchResults] = useState<searchType | undefined>();\n  const [games, setGames] = useState<searchType[\"results\"] | undefined>();\n  const navRef = useRef(null);\n  const [resultsVisible, setResultsVisible] = useState(true);\n  useClickOutside(navRef, setResultsVisible);\n\n  useEffect(() => {\n    if (searchQuery === \"\") {\n      return;\n    }\n    const fetchSearchGames = async () => {\n      const result = await SearchGames(searchQuery);\n      setGames(result.results);\n      setSearchResults(result);\n      console.log(result);\n    };\n    fetchSearchGames();\n  }, [searchQuery]);\n  useEffect(() => {\n    if (query === \"\") {\n      setGames(undefined);\n    }\n  }, [query]);\n\n  return (\n    <div className=\"navbar\">\n      <img src={Logo} alt=\"Logo\" className=\"navbar__logo\" />\n      <div\n        className=\"navbar__searchBox\"\n        ref={navRef}\n        onClick={() => setResultsVisible(true)}\n      >\n        <input\n          id=\"search\"\n          type=\"text\"\n          placeholder=\"Type a game title...\"\n          className=\"navbar__searchBox__input\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        ></input>\n        <label htmlFor=\"search\" className=\"navbar__searchBox__icon\">\n          <Icon icon={searchIcon} className=\"navbar__searchBox__icon__svg\" />\n        </label>\n        {resultsVisible && games && (\n          <div\n            className={\n              resultsVisible\n                ? \"navbar__searchBox__results\"\n                : \"navbar__searchBox__results--hidden\"\n            }\n          >\n            <ul className=\"navbar__searchBox__results__list\">\n              {games?.map((game) => {\n                return <ListItem {...game} key={game.id} />;\n              })}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nexport const useClickOutside = (\n  ref: React.MutableRefObject<any>,\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    window.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n      window.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, setOpen]);\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getGameDetails = async (gameId: number) => {\n  const res = await fetch(`https://api.rawg.io/api/games/${gameId}?${apiKey}`);\n  const result: Types = await res.json();\n  console.log(result.background_image);\n  console.log(result.background_image_additional);\n  console.log(result);\n\n  return result;\n};\n","import { useState, useEffect } from \"react\";\nimport { getGameDetails } from \"../../utils/getGameDetails/getGameDetails\";\nimport { Result as gameType } from \"../../utils/getRelevantGames/interface\";\nimport { Types as DetailsType } from \"../../utils/getGameDetails/interface\";\nimport { Icon } from \"@iconify/react\";\nimport star from \"@iconify-icons/carbon/star-filled\";\nimport { resize } from \"../../utils/resize\";\nexport const Game: React.FC<gameType> = (game) => {\n  const [gameDetails, setGameDetails] = useState<DetailsType>();\n\n  useEffect(() => {\n    const fetchGameDetails = async () => {\n      setGameDetails(await getGameDetails(game.id));\n    };\n    fetchGameDetails();\n    //TODO add game description\n  }, [game.id]);\n  return (\n    <div className=\"game\">\n      <div className=\"game__top\">\n        <img\n          src={resize(game.background_image, 420)}\n          alt=\"background\"\n          className=\"game__top__img\"\n        />\n        <div className=\"game__top__rating\">\n          <Icon icon={star} className=\"game__top__rating__star\" />\n          <div className=\"game__top__rating__text\">\n            {game.rating.toFixed(2)}/5\n          </div>\n        </div>\n        <div className=\"game__top__name\">\n          <div className=\"game__top__name__text\">{game.name}</div>\n        </div>\n        <div className=\"game__top__platforms\">\n          {game.platforms.map((platformElement) => (\n            <div\n              className=\"game__top__platforms__platform\"\n              key={platformElement.platform.name}\n            >\n              {platformElement.platform.name}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* <div>{game.id}</div> */}\n      <div className=\"game__bot\">\n        <div className=\"game__bot__text\">{gameDetails?.description_raw}</div>\n      </div>\n    </div>\n  );\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getRelevantGames = async () => {\n  const res = await fetch(`https://api.rawg.io/api/games/lists/main?${apiKey}`);\n  const result: Types = await res.json();\n  // Remove Duplicates\n  const games = result.results.filter(\n    (game, idx, games) =>\n      games.findIndex((someGame) => someGame.id === game.id) === idx\n  );\n  return games;\n};\n","interface Props {\n  name: string;\n  value: any;\n  text?: string;\n}\nexport const Row: React.FC<Props> = ({ name, value, text }) => {\n  return (\n    <>\n      {(value && (\n        <div className=\"fullGame__out__in__left__rowDiv\">\n          <div className=\"fullGame__out__in__left__rowDiv__name\">{name}</div>\n          <div className=\"fullGame__out__in__left__rowDiv__value\">\n            {value}\n            {text}\n          </div>\n        </div>\n      )) || <></>}\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGameDetails } from \"../../utils/getGameDetails/getGameDetails\";\nimport { Types as DetailsType } from \"../../utils/getGameDetails/interface\";\nimport { useParams } from \"react-router-dom\";\nimport { resize } from \"../../utils/resize\";\nimport { Row } from \"./row/Row\";\nimport defaultImg from \"../../svg/default.svg\";\ninterface ParamTypes {\n  gameID: string;\n}\nexport const FullGameInfo = () => {\n  const [gameDetails, setGameDetails] = useState<DetailsType>();\n  const { gameID } = useParams<ParamTypes>();\n  useEffect(() => {\n    const fetchGameDetails = async () => {\n      setGameDetails(await getGameDetails(parseInt(gameID)));\n      console.log(gameDetails);\n    };\n    fetchGameDetails();\n  }, [gameID]);\n  return (\n    <div className=\"fullGame\">\n      <div className=\"fullGame__name\">{gameDetails?.name}</div>\n      <div className=\"fullGame__out\">\n        <img\n          src={resize(gameDetails?.background_image_additional, 1280)}\n          onError={(e: any) => {\n            e.target.onerror = null;\n            e.target.src = defaultImg;\n          }}\n          className=\"fullGame__out__img\"\n          alt=\"game\"\n        />\n        <div className=\"fullGame__out__in\">\n          <div className=\"fullGame__out__in__left\">\n            <img\n              src={resize(gameDetails?.background_image, 420)}\n              onError={(e: any) => {\n                e.target.onerror = null;\n                e.target.src = defaultImg;\n              }}\n              alt=\"game\"\n              className=\"fullGame__out__in__left__img\"\n            />\n            <Row name=\"RATING\" value={gameDetails?.rating} text=\"/5\" />\n            <Row\n              name=\"METACRITIC\"\n              value={gameDetails?.metacritic}\n              text=\"/100\"\n            />\n            {gameDetails?.rating || gameDetails?.metacritic ? <br /> : \"\"}\n            <Row name=\"RELEASE DATE\" value={gameDetails?.released} />\n            <Row\n              name=\"COMPANY\"\n              value={gameDetails?.developers\n                .map((developer) => developer.name)\n                .slice(0, 1)}\n            />\n            <Row\n              name=\"GENRE\"\n              value={gameDetails?.genres.map((genre) => genre.name + \" \")}\n            />\n            {gameDetails?.released ||\n            gameDetails?.developers ||\n            gameDetails?.genres ? (\n              <br />\n            ) : (\n              \"\"\n            )}\n            <div className=\"fullGame__out__in__left__tagsDiv\">\n              <div className=\"fullGame__out__in__left__tagsDiv__name\">\n                POPULAR TAGS\n              </div>\n              <div className=\"fullGame__out__in__left__tagsDiv__values\">\n                {gameDetails?.tags\n                  .filter(\n                    (tag) =>\n                      ![\"steam-trading-cards\", \"In-App Purchases\"].includes(\n                        tag.name\n                      )\n                  )\n                  .slice(0, 4)\n                  .map((tag) => (\n                    <div className=\"fullGame__out__in__left__tagsDiv__values__value\">\n                      {tag.name}\n                    </div>\n                  ))}\n              </div>\n            </div>\n            {gameDetails?.tags ? <br /> : \"\"}\n            <div className=\"fullGame__out__in__left__platformsDiv\">\n              <div className=\"fullGame__out__in__left__platformsDiv__name\">\n                PLATFORMS\n              </div>\n              <div className=\"fullGame__out__in__left__platformsDiv__value\">\n                {gameDetails?.platforms.map(\n                  (platform) => platform.platform.name\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"fullGame__out__in__right\">\n            <div className=\"fullGame__out__in__right__about\">\n              ABOUT THIS GAME\n            </div>\n            <div className=\"fullGame__out__in__right__desc\">\n              {gameDetails?.description_raw}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { Navbar } from \"./navbar/Navbar\";\nimport { Game } from \"./game/Game\";\nimport { getRelevantGames } from \"../utils/getRelevantGames/getRelevantGames\";\nimport { Result as gameType } from \"../utils/getRelevantGames/interface\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { FullGameInfo } from \"./fullGameInfo/FullGameInfo\";\n// const apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const App = () => {\n  const [gameList, setGameList] = useState<gameType[]>();\n  useEffect(() => {\n    const fetchRelevantGames = async () => {\n      setGameList(await getRelevantGames());\n    };\n    fetchRelevantGames();\n  }, []);\n  return (\n    <div>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"app__gameList\">\n              {gameList?.map((game: gameType) => (\n                <Game {...game} key={game.id} />\n              ))}\n            </div>\n          </Route>\n          <Route exact path=\"/game/:gameID\">\n            <FullGameInfo />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}