{"version":3,"sources":["svg/default.svg","utils/resize.ts","utils/getGameDetails/getGameDetails.ts","svg/Logo.svg","utils/searchGames/SearchGames.ts","components/navbar/listItem/ListItem.tsx","components/navbar/Navbar.tsx","hooks/useClickOutside.ts","components/game/Game.tsx","utils/getRelevantGames/getRelevantGames.ts","components/App.tsx","index.tsx"],"names":["resize","link","width","replace","defaultImg","apiKey","process","getGameDetails","gameID","a","fetch","res","json","result","SearchGames","searchQuery","console","log","toLowerCase","ListItem","game","to","id","className","src","background_image","onError","e","target","onerror","alt","name","released","toString","slice","Navbar","ref","setOpen","useState","query","setQuery","useDebounce","games","setGames","navRef","useRef","resultsVisible","setResultsVisible","useEffect","handleClickOutside","event","current","contains","window","addEventListener","removeEventListener","results","fetchSearchGames","undefined","Logo","onClick","type","placeholder","value","onChange","htmlFor","icon","searchIcon","map","key","Game","gameDetails","setGameDetails","fetchGameDetails","star","rating","toFixed","platforms","platformElement","platform","description_raw","getRelevantGames","filter","idx","findIndex","someGame","FullGameInfo","lazy","App","gameList","setGameList","fetchRelevantGames","basename","exact","path","Suspense","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.009722d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.8b644eb3.svg\";","import defaultImg from \"../svg/default.svg\";\nexport const resize = (link: string | undefined, width: number) => {\n  return (\n    (link && link.replace(\"media/\", `media/resize/${width}/-/`)) || defaultImg\n  );\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getGameDetails = async (gameID: number) => {\n  const res = await fetch(`https://api.rawg.io/api/games/${gameID}?${apiKey}`);\n  const result: Types = await res.json();\n  return result;\n};\n","export default __webpack_public_path__ + \"static/media/Logo.0d1db6e9.svg\";","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const SearchGames = async (searchQuery: string) => {\n  console.log(searchQuery);\n  console.log(\n    `https://api.rawg.io/api/games?${apiKey}&search=${searchQuery.toLowerCase()}&page_size=20`\n  );\n  const res = await fetch(\n    `https://api.rawg.io/api/games?${apiKey}&search=${searchQuery.toLowerCase()}&page_size=20`\n  );\n  const result: Types = await res.json();\n  return result;\n};\n","import React from \"react\";\nimport { Result } from \"../../../utils/searchGames/interface\";\nimport defaultImg from \"../../../svg/default.svg\";\nimport { resize } from \"../../../utils/resize\";\nimport { Link } from \"react-router-dom\";\n\nexport const ListItem: React.FC<Result> = (game) => {\n  return (\n    <Link to={`/game/${game.id}`}>\n      <li className=\"listItem\">\n        <img\n          src={resize(game.background_image, 200)}\n          onError={(e: any) => {\n            e.target.onerror = null;\n            e.target.src = defaultImg;\n          }}\n          alt=\"poster\"\n          className=\"listItem__img\"\n        />\n        <div className=\"listItem__name\">{game.name}</div>\n        <div className=\"listItem__release\">\n          {(game.released && game.released.toString().slice(0, 4)) ||\n            \"--------\"}\n        </div>\n      </li>\n    </Link>\n  );\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport Logo from \"../../svg/Logo.svg\";\nimport { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/bx/bx-search\";\nimport { useDebounce } from \"use-debounce\";\nimport { SearchGames } from \"../../utils/searchGames/SearchGames\";\nimport { Types as searchType } from \"../../utils/searchGames/interface\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport { ListItem } from \"./listItem/ListItem\";\nimport { Link } from \"react-router-dom\";\n\nexport const Navbar = () => {\n  const [query, setQuery] = useState(\"\");\n  const [searchQuery] = useDebounce(query, 700);\n  const [games, setGames] = useState<searchType[\"results\"] | undefined>();\n  const navRef = useRef(null);\n  const [resultsVisible, setResultsVisible] = useState(true);\n  useClickOutside(navRef, setResultsVisible);\n\n  useEffect(() => {\n    if (searchQuery === \"\") {\n      return;\n    }\n    const fetchSearchGames = async () => {\n      const result = await SearchGames(searchQuery);\n      setGames(result.results);\n    };\n    fetchSearchGames();\n  }, [searchQuery]);\n  useEffect(() => {\n    if (query === \"\") {\n      setGames(undefined);\n    }\n  }, [query]);\n\n  return (\n    <div className=\"navbar\">\n      <Link to={`/`}>\n        <img src={Logo} alt=\"Logo\" className=\"navbar__logo\" />\n      </Link>\n      <div\n        className=\"navbar__searchBox\"\n        ref={navRef}\n        onClick={() => setResultsVisible(true)}\n      >\n        <input\n          id=\"search\"\n          type=\"text\"\n          placeholder=\"Type a game title...\"\n          className=\"navbar__searchBox__input\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        ></input>\n        <label htmlFor=\"search\" className=\"navbar__searchBox__icon\">\n          <Icon icon={searchIcon} className=\"navbar__searchBox__icon__svg\" />\n        </label>\n        {resultsVisible && games && (\n          <div\n            className={\n              resultsVisible\n                ? \"navbar__searchBox__results\"\n                : \"navbar__searchBox__results--hidden\"\n            }\n          >\n            <ul className=\"navbar__searchBox__results__list\">\n              {games?.map((game) => {\n                return <ListItem {...game} key={game.id} />;\n              })}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nexport const useClickOutside = (\n  ref: React.MutableRefObject<any>,\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    window.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n      window.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, setOpen]);\n};\n","import { useState, useEffect } from \"react\";\nimport { getGameDetails } from \"../../utils/getGameDetails/getGameDetails\";\nimport { Result as gameType } from \"../../utils/getRelevantGames/interface\";\nimport { Types as DetailsType } from \"../../utils/getGameDetails/interface\";\nimport { Icon } from \"@iconify/react\";\nimport star from \"@iconify-icons/carbon/star-filled\";\nimport { resize } from \"../../utils/resize\";\nimport { Link } from \"react-router-dom\";\nexport const Game: React.FC<gameType> = (game) => {\n  const [gameDetails, setGameDetails] = useState<DetailsType>();\n\n  useEffect(() => {\n    const fetchGameDetails = async () => {\n      setGameDetails(await getGameDetails(game.id));\n    };\n    fetchGameDetails();\n  }, [game.id]);\n  return (\n    <div className=\"game\">\n      <Link to={`/game/${game.id}`} className=\"game__top\">\n        <div className=\"game__top__imgDiv\">\n          <img\n            src={resize(game.background_image, 420)}\n            alt=\"background\"\n            className=\"game__top__imgDiv__img\"\n          />\n        </div>\n        <div className=\"game__top__rating\">\n          <Icon icon={star} className=\"game__top__rating__star\" />\n          <div className=\"game__top__rating__text\">\n            {game.rating.toFixed(2)}/5\n          </div>\n        </div>\n        <div className=\"game__top__name\">\n          <div className=\"game__top__name__text\">{game.name}</div>\n        </div>\n        <div className=\"game__top__platforms\">\n          {game.platforms.map((platformElement) => (\n            <div\n              className=\"game__top__platforms__platform\"\n              key={platformElement.platform.name}\n            >\n              {platformElement.platform.name}\n            </div>\n          ))}\n        </div>\n      </Link>\n\n      <div className=\"game__bot\">\n        <div className=\"game__bot__text\">{gameDetails?.description_raw}</div>\n      </div>\n    </div>\n  );\n};\n","import { Types } from \"./interface\";\nconst apiKey = `key=${process.env.REACT_APP_API_KEY}`;\n\nexport const getRelevantGames = async () => {\n  const res = await fetch(`https://api.rawg.io/api/games/lists/main?${apiKey}`);\n  const result: Types = await res.json();\n  // Remove Duplicates\n  const games = result.results.filter(\n    (game, idx, games) =>\n      games.findIndex((someGame) => someGame.id === game.id) === idx\n  );\n  return games;\n};\n","import React, { useState, useEffect, lazy } from \"react\";\nimport { Navbar } from \"./navbar/Navbar\";\nimport { Game } from \"./game/Game\";\nimport { getRelevantGames } from \"../utils/getRelevantGames/getRelevantGames\";\nimport { Result as gameType } from \"../utils/getRelevantGames/interface\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nconst FullGameInfo = lazy(() => import(\"./fullGameInfo/FullGameInfo\"));\nexport const App = () => {\n  const [gameList, setGameList] = useState<gameType[]>();\n  useEffect(() => {\n    const fetchRelevantGames = async () => {\n      setGameList(await getRelevantGames());\n    };\n    fetchRelevantGames();\n  }, []);\n  return (\n    <div>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"app__gameList\">\n              {gameList?.map((game: gameType) => (\n                <Game {...game} key={game.id} />\n              ))}\n            </div>\n          </Route>\n          <React.Suspense fallback={\"loading\"}>\n            <Route exact path=\"/game/:gameID\">\n              <FullGameInfo />\n            </Route>\n          </React.Suspense>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}